@page "/vehiculos"
@attribute [Authorize]

<div class="row">
    <div class="col-lg-3 col-sm-12 mt-2">
        <div class="text-left mb-3 d-print-none">
            <button class="btn btn-outline-success" @onclick="MostrarFormulario">
                <span class="oi oi-plus"></span>
            </button>
            <button class="btn btn-outline-primary" 
                @onclick="async ()=>{await PrintPageAsync();}">
                <span class="oi oi-print"></span>
            </button>
        </div>
    </div>
    <div class="col-lg-6 col-sm-12 mt-2 text-center">
        <h2 class="text-center"><strong>Listado de Vehiculos</strong></h2>
    </div>
    <div class="col">
        <div class="input-group d-print-none">
            <input type="text" class="form-control" 
            placeholder="Buscar por nombre" @bind="Filtro">
            <button class="btn btn-outline-info" 
                type="button" @onclick="()=>CargarVehiculos()">
                <span class="oi oi-magnifying-glass text-black"></span>
            </button>
        </div>
    </div>
    <hr>
</div>

<div class="container-fluid mt-5">

    <div class="modal" style="display: @(ShowForm ? "block" : "none"); background-color: rgba(0, 0, 0, 0.5);" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><b>@TituloForm</b></h5>
                    <button type="button" class="close btn btn-outline-danger" data-dismiss="modal" aria-label="Close" @onclick="Cancelar">
                        <span aria-hidden="true" class="oi oi-x"></span>
                    </button>
                </div>
                <EditForm Model="request" OnValidSubmit="Send">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="modal-body">
                        <div class="form-group input-group mb-3">
                            <span class="input-group-text bg-white text-black">
                                <span class="oi oi-box"></span>
                            </span>
                            <input type="text" placeholder="Marca" id="nombre" class="form-control" 
                            @bind="@request.Make" required />
                        </div>

                        <div class="form-group input-group mb-3">
                            <span class="input-group-text bg-white text-black">
                                <span class="oi oi-grid-two-up"></span>
                            </span>
                            <input type="text" placeholder="Modelo" id="nombre" class="form-control" 
                            @bind="@request.Model" required />
                        </div>

                        <div class="form-group input-group mb-3">
                            <span class="input-group-text bg-white text-black">
                                <span class="oi oi-spreadsheet"></span>
                            </span>
                            <input type="text" placeholder="Numero de Placa" id="nombre" class="form-control" 
                                title="Ingrese el numero de placa" @bind="@request.PlateNumber" required />
                        </div>

                        <div class="form-group input-group mb-3">
                            <span class="input-group-text bg-white text-black">
                                <span class="oi oi-calendar"></span>
                            </span>
                            <input type="number" placeholder="Año" id="nombre" class="form-control" 
                                title="Ingrese el año de fabricación" @bind="@request.Year" required />
                        </div>
                    </div>

                    <div class="modal-footer">
                        <div class="btn-group">
                            <button type="submit" class="btn btn-outline-success">
                                <span class="oi oi-check"></span>
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

    <div class="row d-flex justify-content-center">
        @if (Vehicles.Any())
        {
            <table class="table table-striped ">
                <thead>
                    <tr>
                        <th>#</th>
                        <th>Marca</th>
                        <th>Modelo</th>
                        <th>Placa</th>
                        <th>Año</th>
                        <th class="d-print-none">...</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var Row in Vehicles)
                    {
                        <tr>
                            <td>@Row.Id</td>
                            <td>@Row.Make</td>
                            <td>@Row.Model</td>
                            <td>@Row.PlateNumber</td>
                            <td>@Row.Year</td>
                            <td class="d-print-none">
                                <button class="btn btn-warning" @onclick="()=>Editar(Row)">
                                    <span class="oi oi-pencil"></span>
                                </button>
                                <button class="btn btn-danger" @onclick="()=>Eliminar(Row)">
                                    <span class="oi oi-trash"></span>
                                </button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
            <div class="col-12 text-center mt-5">
                <div class="card text-white bg-secondary">
                    <div class="card-body">
                        <h4 class="card-title">¡Ups! No se encontraron vehículos.</h4>
                        <p class="card-text">Parece que no hay vehículos que coincidan con tus criterios.</p>
                        <img src="logo1.jpeg" alt="No se encontraron vehículos" 
                        class="rounded-circle img-fluid mt-3" style="max-width: 150px;">
                        <!-- You can replace the image with an icon or any graphic you prefer -->
                    </div>
                </div>
            </div>
        }
    </div>
  
</div>

@code {
    public string TituloForm => request.Id == 0 ?
    "AGREGAR VEHICULO" : "MODIFICAR VEHICULO";

    public bool ShowForm { get; set; } = false;
    public bool ShowDetails { get; set; } = false;
    public string Filtro { get; set; } = "";
    public List<VehicleResponse> Vehicles { get; set; }
        = new List<VehicleResponse>();
    public VehicleResponse SelectedVehicle { get; set; }

    public VehicleRequest request { get; set; } = new VehicleRequest();

    void MostrarFormulario()
    {
        ShowForm = true;
        request = new VehicleRequest();
    }
    void Cancelar()
    {
        request = new VehicleRequest();
        ShowForm = false;
    }
    async Task CargarVehiculos()
    {
        var resultado =
        await vehicleServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Vehicles = resultado.Data!;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarVehiculos();
    }

    public async Task Send()
    {
        if (request.Id == 0)
        {
            //Debo registrar el contacto..
            var r = await vehicleServices.Crear(request);
            if (r.Success)
            {
                Cancelar();
                await CargarVehiculos();
                StateHasChanged();
            }
        }
        else
        {
            //Debo solicitar modificar el contacto...
            var r = await vehicleServices.Modificar(request);
            if (r.Success)
            {
                Cancelar();
                await CargarVehiculos();
                StateHasChanged();
            }
        }
    }

    public void Editar(VehicleResponse item)
    {
        ShowForm = true;
        ShowDetails = false;
        request = new VehicleRequest
            {
                Id = item.Id,
                Make = item.Make,
                Model = item.Model,
                Year = item.Year,
                PlateNumber = item.PlateNumber

            };
    }
    public async Task Eliminar(VehicleResponse vehicle)
    {
        var resultado = await vehicleServices.Eliminar(vehicle.ToRequest());
        if (resultado.Success)
        {
            await CargarVehiculos();
            StateHasChanged();
        }
    }

    void Close()
    {
        ShowDetails = false;
    }
    public async Task MostrarDetalles(int vehicleId)
    {
        ShowForm = false;
        ShowDetails = true;
        SelectedVehicle = Vehicles.FirstOrDefault(v => v.Id == vehicleId);
    }
    private async Task PrintPageAsync()
    {
        // Llama a la función JavaScript para imprimir la página
        await JSRuntime.InvokeVoidAsync("printPage");
    }
}