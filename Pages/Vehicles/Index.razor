@page "/vehiculos"
@attribute [Authorize]

<div class="row">
    <div class="col-lg-4 col-sm-12 mt-2">
        <div class="text-left mb-3">
            <button class="btn btn-outline-success" @onclick="MostrarFormulario">
                <span class="oi oi-plus"></span>
                
            </button>
        </div>
    </div>
    <div class="col-lg-5 col-sm-12 mt-2 text-center">
        <h2 class="text-center"><strong>Listado de Vehiculos</strong></h2>
    </div>
    <hr>
</div>

<div class="container-fluid mt-5">

    <div class="modal" style="display: @(ShowForm ? "block" : "none"); background-color: rgba(0, 0, 0, 0.5);" tabindex="-1" role="dialog">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title"><b>@TituloForm</b></h5>
                    <button type="button" class="close btn btn-outline-danger" data-dismiss="modal" aria-label="Close" @onclick="Cancelar">
                        <span aria-hidden="true" class="oi oi-x"></span>
                    </button>
                </div>
                <EditForm Model="request" OnValidSubmit="Send">
                    <DataAnnotationsValidator />
                    <ValidationSummary />

                    <div class="modal-body">
                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class="oi oi-box"></span>
                                </span>
                            </div>
                            <input type="text" placeholder="Marca" id="nombre" class="form-control" 
                            @bind="@request.Make" required />
                        </div>

                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class="oi oi-grid-two-up"></span>
                                </span>
                            </div>
                            <input type="text" placeholder="Modelo" id="nombre" class="form-control" 
                            @bind="@request.Model" required />
                        </div>

                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class="oi oi-spreadsheet"></span>
                                </span>
                            </div>
                            <input type="text" placeholder="Numero de Placa" id="nombre" class="form-control" 
                                title="Ingrese el numero de placa" @bind="@request.PlateNumber" required />
                        </div>

                        <div class="form-group input-group mb-3">
                            <div class="input-group-prepend">
                                <span class="input-group-text bg-white text-black border-0">
                                    <span class="oi oi-calendar"></span>
                                </span>
                            </div>
                            <input type="text" placeholder="Año" id="nombre" class="form-control" 
                                title="Ingrese el año de fabricación" @bind="@request.Year" required />
                        </div>
                    </div>

                    <div class="modal-footer">
                        <div class="btn-group">
                            <button type="submit" class="btn btn-outline-success">
                                <span class="oi oi-check"></span>
                            </button>
                        </div>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>

    <div class="row d-flex justify-content-center">
        @foreach (var vehicle in Vehicles)
        {
            <div class="col-lg-4 col-md-6 col-sm-12 mt-2 text-center">
                <div class="card">
                    <div class="card-body">
                        <div class="row ">
                            <div class="col">
                                <svg xmlns="http://www.w3.org/2000/svg" width="30" height="30" fill="currentColor" class="bi bi-car-front-fill" viewBox="0 0 16 16">
                                    <path d="M2.52 3.515A2.5 2.5 0 0 1 4.82 2h6.362c1 0 1.904.596 2.298 1.515l.792 1.848c.075.175.21.319.38.404.5.25.855.715.965 1.262l.335 1.679c.033.161.049.325.049.49v.413c0 .814-.39 1.543-1 1.997V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.338c-1.292.048-2.745.088-4 .088s-2.708-.04-4-.088V13.5a.5.5 0 0 1-.5.5h-2a.5.5 0 0 1-.5-.5v-1.892c-.61-.454-1-1.183-1-1.997v-.413a2.5 2.5 0 0 1 .049-.49l.335-1.68c.11-.546.465-1.012.964-1.261a.807.807 0 0 0 .381-.404l.792-1.848ZM3 10a1 1 0 1 0 0-2 1 1 0 0 0 0 2Zm10 0a1 1 0 1 0 0-2 1 1 0 0 0 0 2ZM6 8a1 1 0 0 0 0 2h4a1 1 0 1 0 0-2H6ZM2.906 5.189a.51.51 0 0 0 .497.731c.91-.073 3.35-.17 4.597-.17 1.247 0 3.688.097 4.597.17a.51.51 0 0 0 .497-.731l-.956-1.913A.5.5 0 0 0 11.691 3H4.309a.5.5 0 0 0-.447.276L2.906 5.19Z" />
                                </svg> 
                                <h5 class="card-title"><b>@vehicle.Make @vehicle.Model @vehicle.Year</b></h5>
                            </div>
                        </div>
                    </div>
                    <div class="card-footer ">
                        <small><strong>Placa:</strong> @vehicle.PlateNumber</small>
                        <small><strong>Color:</strong> Unknow</small>
                        <br>
                        <button class="btn btn-warning" @onclick="()=>Editar(vehicle)">
                            <span class="oi oi-pencil"></span>
                        </button>
                        <button class="btn btn-danger" @onclick="()=>Eliminar(vehicle)">
                            <span class="oi oi-trash"></span>
                        </button>
                    </div>
                </div>
            </div>
        }
    </div>
  
</div>

@code {
    public string TituloForm => request.Id == 0 ?
    "Agregar vehiculo" : "Modificar vehiculo";

    public bool ShowForm { get; set; } = false;
    public bool ShowDetails { get; set; } = false;
    public string Filtro { get; set; } = "";
    public List<VehicleResponse> Vehicles { get; set; }
        = new List<VehicleResponse>();
    public VehicleResponse SelectedVehicle { get; set; }

    public VehicleRequest request { get; set; } = new VehicleRequest();

    void MostrarFormulario()
    {
        ShowForm = true;
        request = new VehicleRequest();
    }
    void Cancelar()
    {
        request = new VehicleRequest();
        ShowForm = false;
    }
    async Task CargarVehiculos()
    {
        var resultado =
        await vehicleServices.Consultar(Filtro);
        if (resultado.Success)
        {
            Vehicles = resultado.Data!;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await CargarVehiculos();
    }

    public async Task Send()
    {
        if (request.Id == 0)
        {
            //Debo registrar el contacto..
            var r = await vehicleServices.Crear(request);
            if (r.Success)
            {
                Cancelar();
                await CargarVehiculos();
                StateHasChanged();
            }
        }
        else
        {
            //Debo solicitar modificar el contacto...
            var r = await vehicleServices.Modificar(request);
            if (r.Success)
            {
                Cancelar();
                await CargarVehiculos();
                StateHasChanged();
            }
        }
    }

    public void Editar(VehicleResponse item)
    {
        ShowForm = true;
        ShowDetails = false;
        request = new VehicleRequest
            {
                Id = item.Id,
                Make = item.Make,
                Model = item.Model,
                Year = item.Year,
                PlateNumber = item.PlateNumber

            };
    }
    public async Task Eliminar(VehicleResponse vehicle)
    {
        var resultado = await vehicleServices.Eliminar(vehicle.ToRequest());
        if (resultado.Success)
        {
            await CargarVehiculos();
            StateHasChanged();
        }
    }

    void Close()
    {
        ShowDetails = false;
    }
    public async Task MostrarDetalles(int vehicleId)
    {
        ShowForm = false;
        ShowDetails = true;
        SelectedVehicle = Vehicles.FirstOrDefault(v => v.Id == vehicleId);
    }
}