@page "/"
@using RentCar.Authentication;
@inject IUserAccountService userAccountService
@inject AuthenticationStateProvider authStateProvider

<PageTitle>RentCar</PageTitle>

<style>
    .login-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100vh;
    }

    .login-form {
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
        max-width: 400px;
        width: 100%;
    }

    .login-form h2 {
        text-align: center;
        color: #333;
    }

    .form-group {
        margin-bottom: 20px;
    }

    .form-group label {
        font-size: 14px;
        color: #555;
    }
    body {
        background-color: #f4f4f4;
    }
    .form-control {
        width: 100%;
        padding: 8px;
        font-size: 16px;
        border: 1px solid #ccc;
        border-radius: 4px;
    }

    .btn-primary {
        background-color: #3498db;
        color: #fff;
        border: none;
        padding: 10px;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
    }

    .btn-secondary {
        background-color: #e74c3c;
        color: #fff;
        border: none;
        padding: 10px;
        border-radius: 4px;
        cursor: pointer;
        width: 100%;
    }

    .btn-secondary:hover {
        background-color: #c0392b;
    }

    p {
        text-align: center;
        margin-top: 15px;
        font-size: 14px;
        color: #555;
    }

    a {
        color: #3498db;
        cursor: pointer;
    }

    a:hover {
        text-decoration: underline;
    }

    .welcome-message {
        text-align: center;
        font-size: 18px;
        color: #333;
    }
</style>

<div class="login-container">
    <div class="login-form">
        <form>
            <h2><strong>Iniciar sesión</strong></h2>
            @if (mensajeError != null)
            {
                <div class="alert-warning text-center">
                    <label class="text-dark"><strong>@mensajeError</strong></label>
                </div>
            }
            <br>
            <div class="form-group">
                <input placeholder="User Name" type="text" class="form-control" id="username" @bind="model.UserName" required>
            </div>
            <div class="form-group">
                <input placeholder="Password" type="password" class="form-control" id="password" @bind="model.Password" required>
            </div>
            <button type="button" class="btn btn-primary" @onclick="Authenticate">Iniciar sesión</button>
            <p>
                ¿Aún no tienes una cuenta? <a href="#" @onclick="CrearUsuario">Crear Usuario</a>
            </p>
            
        </form>
    </div>
</div>

@code {
    private string mensajeError = null;
    private LoginModel model = new LoginModel();

    private class LoginModel
    {
        public string UserName { get; set; }
        public string Password { get; set; }
    }

    private async Task Authenticate()
    {
        if (string.IsNullOrWhiteSpace(model.UserName) || string.IsNullOrWhiteSpace(model.Password))
        {
            mensajeError = "Complete Los Campos Patrón 😒";
            
        }
        else
        {
            var userAccount = userAccountService.GetByUserName(model.UserName.ToLower());
            if(userAccount == null || userAccount.Password != model.Password)
            {
                mensajeError = "Las Credenciales Son Incorrectas ❌";
                return;
            }

            var customAuthStateProvider = (CustomAuthenticationStateProvider)authStateProvider;
            await customAuthStateProvider.UpdateAuthenticationState(new UserSession
                {
                    UserName = userAccount.Username,
                    Name = userAccount.Name
                    //Role = userAccount.Role
                });
                mensajeError = null;
            urlHelper.NavigateTo("/main", true);
        }
        
    }

    protected override async Task OnInitializedAsync()
    {
        // Llamada a CrearUsuarioAdmin antes de intentar autenticar
        await userServices.CreatUser();
        // Resto de tu código OnInitializedAsync
    }

    void CrearUsuario()
    {
        NavigationManager.NavigateTo("/createUser");
    }
}